# A deployment is a supervisor for pods and replica sets, giving you fine-grained control over
# how and when a new pod version is rolled out as well as rolled back to a previous state.
kind: Deployment
apiVersion: apps/v1beta2 # for versions before 1.8.0 use apps/v1beta1
metadata:
  name: rpi-lnp-deploy
spec:
  selector:
    # matchLabels is a map of {key,value} pairs.
    matchLabels:
      app: rpi-lnp
  replicas: 1 # tells deployment to run 2 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      # unlike pod-nginx.yaml, the name is not included in the meta data as a unique name is
      # generated from the deployment name
      labels:
        app: rpi-lnp
    spec:
      containers:
        - name: rpi-lnp-container
          # This is the name of the image which we are trying to pull from the Docker or
          # internal registry of images.
          image: lsioarmhf/nginx-armhf:latest
          # The default pull policy is IfNotPresent which causes the Kubelet to skip
          # pulling an image if it already exists.  Otherwise set the imagePullPolicy.
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
              name: "http-server"
            - containerPort: 443
              name: "https-server"
          volumeMounts:
            # name must match the volume name defined in volumes
            - name: rpi-lnp-mounts
              # mount path within the container
              mountPath: "/config/www"
              # volumeMounts.subPath property can be used to specify a sub-path inside the
              # referenced volume instead of its root.
              subPath: www
            - name: rpi-lnp-mounts
              mountPath: "/config/nginx/site-confs"
              subPath: nginx/site-confs
          #resources:
          #  requests:
          #    cpu: 200m
      volumes:
        # define a volume name use for volumeMounts
        - name: rpi-lnp-mounts
          # claims as volumes
          persistentVolumeClaim:
            # name must match the volume name defined in PersistentVolumeClaims
            claimName: rpi-lnp-pvc
